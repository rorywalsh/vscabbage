{
  "name": "cabbage",
  "displayName": "cabbage",
  "description": "A Visual Studio extension for Cabbage",
  "version": "0.0.1",
  "engines": {
    "vscode": "^1.88.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [],
  "main": "./dist/extension.js",
  "contributes": {
    "configuration": {
      "title": "Cabbage",
      "properties": {
        "cabbage.pathToCabbageExecutable": {
          "type": "string",
          "default": "/Users/rwalsh/sourcecode/cabbage3/icabbage/cabbage/build/Debug",
          "description": "Path to Cabbage service app (path only, don't pass the file name)."
        },
        "cabbage.audioOutput": {
          "type": "string",
          "default": "Mac Mini Speakers",
          "description": "Choose an audio output device",
          "enum": [
            "Mac Mini Speakers",
            "Blackhole 2ch",
            "Microsoft Teams Audio"
          ],
          "enumDescriptions": [
            "Output to Mac Mini Speakers",
            "Output to Blackhole 2ch",
            "Output to Microsoft Teams Audio"
          ]
        },
        "cabbage.audioInput": {
          "type": "string",
          "default": "None",
          "description": "Choose an audio input device",
          "enum": [
            "Blackhole 2ch",
            "Microsoft Teams Audio"
          ],
          "enumDescriptions": [
            "Input from Blackhole 2ch",
            "Input from Microsoft Teams Audio"
          ]
        },
        "cabbage.audioSampleRate": {
          "type": "string",
          "default": "44100",
          "description": "Choose an audio sample rate",
          "enum": [
            "44100",
            "48000",
            "88200",
            "96000",
            "176400"
          ],
          "enumDescriptions": [
            "44100 samples per second",
            "48000 samples per second",
            "88200 samples per second",
            "96000 samples per second",
            "176400 samples per second"
          ]
        },
        "cabbage.audioBufferSize": {
          "type": "string",
          "default": "32 samples",
          "description": "Choose an audio sample rate",
          "enum": [
            "16 samples",
            "32 samples",
            "64 samples",
            "96 samples",
            "128 samples",
            "160 samples",
            "192 samples",
            "224 samples",
            "256 samples",
            "288 samples",
            "320 samples",
            "352 samples",
            "384 samples",
            "416 samples",
            "448 samples",
            "480 samples",
            "512 samples",
            "544 samples",
            "576 samples",
            "608 samples",
            "640 samples",
            "672 samples",
            "704 samples",
            "736 samples",
            "768 samples",
            "800 samples",
            "832 samples",
            "864 samples",
            "896 samples",
            "928 samples",
            "960 samples",
            "992 samples",
            "1024 samples"
          ]
        },
        "cabbage.snapToSize": {
          "type": "number",
          "default": 4,
          "description": "Set the number of pixels to move by when dragging an element."
        },
        "cabbage.saveExternalJSON": {
          "type": "boolean",
          "default": true,
          "description": "Enable automatic saving of external JSON when compiling .csd file."
        },
        "cabbage.defaultJsonFormatting": {
          "type": "string",
          "default": "Single line objects",
          "description": "Choose an option",
          "enum": [
            "Singe line objects",
            "Multiline objects"
          ],
          "enumDescriptions": [
            "Formats each widget object to a single line enclosed with curly braces",
            "Formats each widget object over multiple lines; typical of most JSON formatters"
          ]
        }
      }
    },
    "commands": [
      {
        "command": "cabbage.launch",
        "title": "Launch Cabbage",
        "category": "Cabbage"
      },
      {
        "command": "cabbage.editMode",
        "title": "Edit Mode",
        "category": "Cabbage"
      },
      {
        "command": "cabbage.formatDocument",
        "title": "Format Document",
        "category": "Cabbage"
      },
      {
        "command": "cabbage.expandCabbageJSON",
        "title": "Expand Cabbage section",
        "category": "Cabbage"
      }
    ],
    "languages": [
      {
        "id": "csound-orc",
        "aliases": [
          "Csound ORC",
          "csound-orc"
        ],
        "extensions": [
          ".orc",
          ".udo"
        ],
        "configuration": "./language-configuration.json"
      },
      {
        "id": "csound-sco",
        "aliases": [
          "Csound SCO",
          "csound-sco"
        ],
        "extensions": [
          ".sco"
        ],
        "configuration": "./language-configuration.json"
      },
      {
        "id": "csound-csd",
        "aliases": [
          "Csound CSD",
          "csound-csd"
        ],
        "extensions": [
          ".csd"
        ],
        "configuration": "./language-configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "csound-orc",
        "scopeName": "source.csound.orc",
        "path": "./syntaxes/csound-orc.tmLanguage.json"
      },
      {
        "language": "csound-sco",
        "scopeName": "source.csound.sco",
        "path": "./syntaxes/csound-sco.tmLanguage.json"
      },
      {
        "language": "csound-csd",
        "scopeName": "source.csound.csd",
        "path": "./syntaxes/csound-csd.tmLanguage.json",
        "embeddedLanguages": {
          "meta.embedded.json": "json"
        }
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.6",
    "@types/node": "18.x",
    "@types/vscode": "^1.88.0",
    "@types/ws": "^8.5.10",
    "@typescript-eslint/eslint-plugin": "^7.4.0",
    "@typescript-eslint/parser": "^7.4.0",
    "@vscode/test-cli": "^0.0.8",
    "@vscode/test-electron": "^2.3.9",
    "eslint": "^8.57.0",
    "ts-loader": "^9.5.1",
    "typescript": "^5.3.3",
    "webpack": "^5.91.0",
    "webpack-cli": "^5.1.4"
  },
  "dependencies": {
    "interactjs": "^1.10.27",
    "ws": "^8.16.0"
  }
}